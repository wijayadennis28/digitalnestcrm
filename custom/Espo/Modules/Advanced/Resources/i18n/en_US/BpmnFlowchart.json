{
    "labels": {
        "Create BpmnFlowchart": "Create Flowchart",
        "Hand tool": "Hand tool",
        "Create Event tool": "Create Event tool",
        "Create Gateway tool": "Create Event tool",
        "Create Activity tool": "Create Activity tool",
        "Connect tool": "Connect tool",
        "Erase tool": "Erase tool",
        "Full Screen": "Full Screen",
        "Processes": "Processes",
        "data": "Data",
        "Zoom In": "Zoom In",
        "Zoom Out": "Zoom Out",
        "Error": "Error",
        "Events": "Events",
        "Activities": "Activities",
        "Gateways": "Gateways"
    },
    "fields": {
        "isActive": "Is Active",
        "targetType": "Target Entity Type",
        "data": "Data",
        "hasNoneStartEvent": "Has Start Event of None type"
    },
    "links": {
        "processes": "Processes"
    },
    "elements": {
        "eventStartConditional": "Conditional Start Event",
        "eventStartTimer": "Timer Start Event",
        "eventStartError": "Error Start Event",
        "eventStartEscalation": "Escalation Start Event",
        "eventStartSignal": "Signal Start Event",
        "eventStart": "Start Event",
        "eventStartCompensation": "Compensation Start Event",
        "eventStartConditionalEventSubProcess": "Sub-Process Conditional Start Event",
        "eventStartTimerEventSubProcess": "Sub-Process Timer Start Event",
        "eventStartSignalEventSubProcess": "Sub-Process Signal Start Event",
        "eventIntermediateTimerCatch": "Timer Intermediate Event (Catching)",
        "eventIntermediateConditionalCatch": "Conditional Intermediate Event (Catching)",
        "eventIntermediateEscalationThrow": "Escalation Intermediate Event (Throwing)",
        "eventIntermediateSignalThrow": "Signal Intermediate Event (Throwing)",
        "eventIntermediateCompensationThrow": "Compensation Intermediate Event (Throwing)",
        "eventIntermediateSignalCatch": "Signal Intermediate Event (Catching)",
        "eventIntermediateMessageCatch": "Message Intermediate Event (Catching)",
        "eventEnd": "End Event",
        "eventEndTerminate": "Terminate End Event",
        "eventEndError": "Error End Event",
        "eventEndEscalation": "Escalation End Event",
        "eventEndSignal": "Signal End Event",
        "eventEndCompensation": "Compensation End Event",
        "eventIntermediateErrorBoundary": "Error Intermediate Event (Boundary)",
        "eventIntermediateTimerBoundary": "Timer Intermediate Event (Boundary)",
        "eventIntermediateConditionalBoundary": "Conditional Intermediate Event (Boundary)",
        "eventIntermediateEscalationBoundary": "Escalation Intermediate Event (Boundary)",
        "eventIntermediateSignalBoundary": "Signal Intermediate Event (Boundary)",
        "eventIntermediateMessageBoundary": "Message Intermediate Event (Boundary)",
        "eventIntermediateCompensationBoundary": "Compensation Intermediate Event (Boundary)",
        "gatewayExclusive": "Exclusive Gateway",
        "gatewayInclusive": "Inclusive Gateway",
        "gatewayParallel": "Parallel Gateway",
        "gatewayEventBased": "Event Based Gateway",
        "taskSendMessage": "Send Message Task",
        "taskScript": "Script Task",
        "taskBusinessRule": "Business Rule Task",
        "taskUser": "User Task",
        "task": "Task",
        "callActivity": "Call Activity",
        "subProcess": "Sub-Process",
        "eventSubProcess": "Event Sub-Process",
        "flow": "Sequence Flow"
    },
    "presetFilters": {
        "isManuallyStartable": "Manually Startable",
        "activeHasNoneStartEvent": "Active w/ None Start Event",
        "active": "Active"
    }
}